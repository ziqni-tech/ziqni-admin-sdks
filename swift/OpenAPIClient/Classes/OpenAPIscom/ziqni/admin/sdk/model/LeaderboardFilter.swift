//
// LeaderboardFilter.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct LeaderboardFilter: Codable, Hashable {

    /** Include rank from one [1] to the rank specified here. The maximum allowed is 50 */
    public var topRanksToInclude: Int
    /** Include ranks above member position. The maximum allowed is 20 */
    public var ranksAboveToInclude: Int?
    /** Include ranks below member position. The maximum allowed is 20 */
    public var ranksBelowToInclude: Int?

    public init(topRanksToInclude: Int, ranksAboveToInclude: Int? = nil, ranksBelowToInclude: Int? = nil) {
        self.topRanksToInclude = topRanksToInclude
        self.ranksAboveToInclude = ranksAboveToInclude
        self.ranksBelowToInclude = ranksBelowToInclude
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case topRanksToInclude
        case ranksAboveToInclude
        case ranksBelowToInclude
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(topRanksToInclude, forKey: .topRanksToInclude)
        try container.encodeIfPresent(ranksAboveToInclude, forKey: .ranksAboveToInclude)
        try container.encodeIfPresent(ranksBelowToInclude, forKey: .ranksBelowToInclude)
    }
}

