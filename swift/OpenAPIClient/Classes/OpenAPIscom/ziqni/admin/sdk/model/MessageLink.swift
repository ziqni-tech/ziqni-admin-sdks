//
// MessageLink.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct MessageLink: Codable, Hashable {

    /** The identifier of the entity */
    public var entityId: String
    /** The type of entity the link refers to like Award or Achievement, Contest, etc */
    public var entityType: String
    /** The type of link, relatesTo, refersTo, describes */
    public var linkType: String

    public init(entityId: String, entityType: String, linkType: String) {
        self.entityId = entityId
        self.entityType = entityType
        self.linkType = linkType
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case entityId
        case entityType
        case linkType
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(entityId, forKey: .entityId)
        try container.encode(entityType, forKey: .entityType)
        try container.encode(linkType, forKey: .linkType)
    }
}

