//
// Dependancy.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Dependancy: Codable, Hashable {

    /** A model that will have dependancies implemented */
    public var entityType: String?
    public var dependantOn: DependantOn?

    public init(entityType: String? = nil, dependantOn: DependantOn? = nil) {
        self.entityType = entityType
        self.dependantOn = dependantOn
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case entityType
        case dependantOn
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(entityType, forKey: .entityType)
        try container.encodeIfPresent(dependantOn, forKey: .dependantOn)
    }
}

