//
// Rule.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Rule: Codable, Hashable {

    /** The id of the context object this rule refers to */
    public var entityId: String
    /** The action this rule describes, like start.contest, or points.awarded */
    public var action: String
    /** The context of this rule like achievement, competition, or contest  */
    public var context: String
    public var rules: RuleExpression
    /** Unique system identifier of a Main Rule */
    public var id: String
    /** Achievement, Competition, or Contest  */
    public var entityType: String

    public init(entityId: String, action: String, context: String, rules: RuleExpression, id: String, entityType: String) {
        self.entityId = entityId
        self.action = action
        self.context = context
        self.rules = rules
        self.id = id
        self.entityType = entityType
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case entityId
        case action
        case context
        case rules
        case id
        case entityType
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(entityId, forKey: .entityId)
        try container.encode(action, forKey: .action)
        try container.encode(context, forKey: .context)
        try container.encode(rules, forKey: .rules)
        try container.encode(id, forKey: .id)
        try container.encode(entityType, forKey: .entityType)
    }
}

