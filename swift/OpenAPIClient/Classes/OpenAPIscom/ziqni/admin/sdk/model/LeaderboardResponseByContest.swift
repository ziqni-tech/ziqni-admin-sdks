//
// LeaderboardResponseByContest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct LeaderboardResponseByContest: Codable, Hashable {

    /** The id of the contest */
    public var contestId: String
    /** A name for the Contest. Can be translated */
    public var name: String
    /** To what round does the contest belong */
    public var round: Int
    public var leaderboard: [Leaderboard]?

    public init(contestId: String, name: String, round: Int, leaderboard: [Leaderboard]? = nil) {
        self.contestId = contestId
        self.name = name
        self.round = round
        self.leaderboard = leaderboard
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case contestId
        case name
        case round
        case leaderboard
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(contestId, forKey: .contestId)
        try container.encode(name, forKey: .name)
        try container.encode(round, forKey: .round)
        try container.encodeIfPresent(leaderboard, forKey: .leaderboard)
    }
}

