//
// CreateSpaceRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CreateSpaceRequest: Codable, Hashable {

    /** The space name in the Ziqni system */
    public var name: String
    /** Type of account; personal or company or vendor */
    public var accountType: String
    /** The master account for this account */
    public var masterSpace: String?
    /** Foreign key to unit of measure id. */
    public var unitsOfMeasure: [String]?
    /** Additional constraints, if set means true */
    public var constraints: [String]?

    public init(name: String, accountType: String, masterSpace: String? = nil, unitsOfMeasure: [String]? = nil, constraints: [String]? = nil) {
        self.name = name
        self.accountType = accountType
        self.masterSpace = masterSpace
        self.unitsOfMeasure = unitsOfMeasure
        self.constraints = constraints
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case accountType
        case masterSpace
        case unitsOfMeasure
        case constraints
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(name, forKey: .name)
        try container.encode(accountType, forKey: .accountType)
        try container.encodeIfPresent(masterSpace, forKey: .masterSpace)
        try container.encodeIfPresent(unitsOfMeasure, forKey: .unitsOfMeasure)
        try container.encodeIfPresent(constraints, forKey: .constraints)
    }
}

