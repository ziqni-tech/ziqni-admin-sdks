//
// Space.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Space: Codable, Hashable {

    /** A unique system generated identifier */
    public var id: String
    /** This is the space name which is linked to the account */
    public var spaceName: String
    /** ISO8601 timestamp for when a Model was created. All records are stored in UTC time zone */
    public var created: Date
    /** Type of account; personal or company or vendor */
    public var accountType: String
    /** The master account for this account */
    public var masterSpace: String?

    public init(id: String, spaceName: String, created: Date, accountType: String, masterSpace: String? = nil) {
        self.id = id
        self.spaceName = spaceName
        self.created = created
        self.accountType = accountType
        self.masterSpace = masterSpace
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case spaceName
        case created
        case accountType
        case masterSpace
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(spaceName, forKey: .spaceName)
        try container.encode(created, forKey: .created)
        try container.encode(accountType, forKey: .accountType)
        try container.encodeIfPresent(masterSpace, forKey: .masterSpace)
    }
}

