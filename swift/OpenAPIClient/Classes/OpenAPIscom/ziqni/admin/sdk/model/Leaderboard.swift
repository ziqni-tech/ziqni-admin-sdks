//
// Leaderboard.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Leaderboard: Codable, Hashable {

    /** A unique system generated identifier */
    public var id: String
    /** This is the space name which is linked to the account */
    public var spaceName: String
    /** ISO8601 timestamp for when a Model was created. All records are stored in UTC time zone */
    public var created: Date
    public var leaderboardEntries: [LeaderboardEntry]?
    /** Additional constraints */
    public var constraints: [String]
    /** how many changes were made to teh leaderboard */
    public var sequence: Int?

    public init(id: String, spaceName: String, created: Date, leaderboardEntries: [LeaderboardEntry]? = nil, constraints: [String], sequence: Int? = nil) {
        self.id = id
        self.spaceName = spaceName
        self.created = created
        self.leaderboardEntries = leaderboardEntries
        self.constraints = constraints
        self.sequence = sequence
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case spaceName
        case created
        case leaderboardEntries
        case constraints
        case sequence
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(spaceName, forKey: .spaceName)
        try container.encode(created, forKey: .created)
        try container.encodeIfPresent(leaderboardEntries, forKey: .leaderboardEntries)
        try container.encode(constraints, forKey: .constraints)
        try container.encodeIfPresent(sequence, forKey: .sequence)
    }
}

