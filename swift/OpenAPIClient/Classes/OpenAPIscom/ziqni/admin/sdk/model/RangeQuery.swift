//
// RangeQuery.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct RangeQuery: Codable, Hashable {

    /** The key of the parameter that is being searched    */
    public var queryField: String
    /** Greater than value */
    public var gt: String?
    /** Less than value */
    public var lt: String?
    /** Additional constraints */
    public var constraints: [String]?

    public init(queryField: String, gt: String? = nil, lt: String? = nil, constraints: [String]? = nil) {
        self.queryField = queryField
        self.gt = gt
        self.lt = lt
        self.constraints = constraints
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case queryField
        case gt
        case lt
        case constraints
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(queryField, forKey: .queryField)
        try container.encodeIfPresent(gt, forKey: .gt)
        try container.encodeIfPresent(lt, forKey: .lt)
        try container.encodeIfPresent(constraints, forKey: .constraints)
    }
}

