//
// Transformer.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Transformer: Codable, Hashable {

    /** A unique system generated identifier */
    public var id: String
    /** This is the space name which is linked to the account */
    public var spaceName: String
    /** ISO8601 timestamp for when a Model was created. All records are stored in UTC time zone */
    public var created: Date
    /** The name of the Transformer */
    public var name: String
    /** Source code */
    public var source: String
    public var sourceLanguage: SourceLanguage

    public init(id: String, spaceName: String, created: Date, name: String, source: String, sourceLanguage: SourceLanguage) {
        self.id = id
        self.spaceName = spaceName
        self.created = created
        self.name = name
        self.source = source
        self.sourceLanguage = sourceLanguage
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case spaceName
        case created
        case name
        case source
        case sourceLanguage
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(spaceName, forKey: .spaceName)
        try container.encode(created, forKey: .created)
        try container.encode(name, forKey: .name)
        try container.encode(source, forKey: .source)
        try container.encode(sourceLanguage, forKey: .sourceLanguage)
    }
}

