/**
 * ZIQNI Admin API
 * Ziqni Application Services are used to manage and configure spaces.  Change log:  2024-02-27 Added rewards reduced to the LeaderboardEntry response
 *
 * The version of the OpenAPI document: 3.0.19
 * Contact: support@ziqni.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import JackpotContributionResponse from '../model/JackpotContributionResponse';

/**
* JackpotContributions service.
* @module api/JackpotContributionsApi
* @version 0.0.26
*/
export default class JackpotContributionsApi {

    /**
    * Constructs a new JackpotContributionsApi. 
    * @alias module:api/JackpotContributionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getJackpotContributions operation.
     * @callback module:api/JackpotContributionsApi~getJackpotContributionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/JackpotContributionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get jackpot contributions by member
     * Returns a list of jackpot contributions by member. This assumes that jackpot contributions have first been uploaded via a POST request or web console 
     * @param {String} memberId The ID of the member to filter contributions by
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.id The unique identifiers of the resources
     * @param {Number} opts.limit Limit the returned total records found
     * @param {Number} opts.skip Skip the returned records found and return the next batch of records
     * @param {module:api/JackpotContributionsApi~getJackpotContributionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/JackpotContributionResponse}
     */
    getJackpotContributions(memberId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'memberId' is set
      if (memberId === undefined || memberId === null) {
        throw new Error("Missing the required parameter 'memberId' when calling getJackpotContributions");
      }

      let pathParams = {
      };
      let queryParams = {
        'memberId': memberId,
        'id': this.apiClient.buildCollectionParam(opts['id'], 'multi'),
        '_limit': opts['limit'],
        '_skip': opts['skip']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = JackpotContributionResponse;
      return this.apiClient.callApi(
        '/jackpot-contributions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
