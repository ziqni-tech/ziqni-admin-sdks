/**
 * ZIQNI Admin API
 * Ziqni Application Services are used to manage and configure spaces.  Change log:  2024-02-27 Added rewards reduced to the LeaderboardEntry response
 *
 * The version of the OpenAPI document: 3.0.19
 * Contact: support@ziqni.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InstantWinLogAllOf from './InstantWinLogAllOf';
import ModelDefault from './ModelDefault';
import OptParamModels from './OptParamModels';

/**
 * The InstantWinLog model module.
 * @module model/InstantWinLog
 * @version 0.0.26
 */
class InstantWinLog {
    /**
     * Constructs a new <code>InstantWinLog</code>.
     * 
     * @alias module:model/InstantWinLog
     * @implements module:model/InstantWinLogAllOf
     * @implements module:model/OptParamModels
     * @implements module:model/ModelDefault
     * @param id {String} A unique system generated identifier
     * @param spaceName {String} This is the space name which is linked to the account
     * @param created {Date} ISO8601 timestamp for when a Model was created. All records are stored in UTC time zone
     */
    constructor(id, spaceName, created) { 
        InstantWinLogAllOf.initialize(this);OptParamModels.initialize(this);ModelDefault.initialize(this, id, spaceName, created);
        InstantWinLog.initialize(this, id, spaceName, created);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, spaceName, created) { 
        obj['id'] = id;
        obj['spaceName'] = spaceName;
        obj['created'] = created;
    }

    /**
     * Constructs a <code>InstantWinLog</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InstantWinLog} obj Optional instance to populate.
     * @return {module:model/InstantWinLog} The populated <code>InstantWinLog</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InstantWinLog();
            InstantWinLogAllOf.constructFromObject(data, obj);
            OptParamModels.constructFromObject(data, obj);
            ModelDefault.constructFromObject(data, obj);

            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('memberId')) {
                obj['memberId'] = ApiClient.convertToType(data['memberId'], 'String');
            }
            if (data.hasOwnProperty('awardId')) {
                obj['awardId'] = ApiClient.convertToType(data['awardId'], 'String');
            }
            if (data.hasOwnProperty('spinId')) {
                obj['spinId'] = ApiClient.convertToType(data['spinId'], 'Number');
            }
            if (data.hasOwnProperty('spinsAdded')) {
                obj['spinsAdded'] = ApiClient.convertToType(data['spinsAdded'], 'Number');
            }
            if (data.hasOwnProperty('customFields')) {
                obj['customFields'] = ApiClient.convertToType(data['customFields'], {'String': Object});
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], {'String': 'String'});
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('spaceName')) {
                obj['spaceName'] = ApiClient.convertToType(data['spaceName'], 'String');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * The partner tenant identifier
 * @member {String} accountId
 */
InstantWinLog.prototype['accountId'] = undefined;

/**
 * The partner player identifier
 * @member {String} memberId
 */
InstantWinLog.prototype['memberId'] = undefined;

/**
 * The award identifier associated with the log
 * @member {String} awardId
 */
InstantWinLog.prototype['awardId'] = undefined;

/**
 * The spin identifier
 * @member {Number} spinId
 */
InstantWinLog.prototype['spinId'] = undefined;

/**
 * The number of spins added in this log entry
 * @member {Number} spinsAdded
 */
InstantWinLog.prototype['spinsAdded'] = undefined;

/**
 * @member {Object.<String, Object>} customFields
 */
InstantWinLog.prototype['customFields'] = undefined;

/**
 * A list of id's used to tag models
 * @member {Array.<String>} tags
 */
InstantWinLog.prototype['tags'] = undefined;

/**
 * @member {Object.<String, String>} metadata
 */
InstantWinLog.prototype['metadata'] = undefined;

/**
 * A unique system generated identifier
 * @member {String} id
 */
InstantWinLog.prototype['id'] = undefined;

/**
 * This is the space name which is linked to the account
 * @member {String} spaceName
 */
InstantWinLog.prototype['spaceName'] = undefined;

/**
 * ISO8601 timestamp for when a Model was created. All records are stored in UTC time zone
 * @member {Date} created
 */
InstantWinLog.prototype['created'] = undefined;


// Implement InstantWinLogAllOf interface:
/**
 * The partner tenant identifier
 * @member {String} accountId
 */
InstantWinLogAllOf.prototype['accountId'] = undefined;
/**
 * The partner player identifier
 * @member {String} memberId
 */
InstantWinLogAllOf.prototype['memberId'] = undefined;
/**
 * The award identifier associated with the log
 * @member {String} awardId
 */
InstantWinLogAllOf.prototype['awardId'] = undefined;
/**
 * The spin identifier
 * @member {Number} spinId
 */
InstantWinLogAllOf.prototype['spinId'] = undefined;
/**
 * The number of spins added in this log entry
 * @member {Number} spinsAdded
 */
InstantWinLogAllOf.prototype['spinsAdded'] = undefined;
// Implement OptParamModels interface:
/**
 * @member {Object.<String, Object>} customFields
 */
OptParamModels.prototype['customFields'] = undefined;
/**
 * A list of id's used to tag models
 * @member {Array.<String>} tags
 */
OptParamModels.prototype['tags'] = undefined;
/**
 * @member {Object.<String, String>} metadata
 */
OptParamModels.prototype['metadata'] = undefined;
// Implement ModelDefault interface:
/**
 * A unique system generated identifier
 * @member {String} id
 */
ModelDefault.prototype['id'] = undefined;
/**
 * This is the space name which is linked to the account
 * @member {String} spaceName
 */
ModelDefault.prototype['spaceName'] = undefined;
/**
 * ISO8601 timestamp for when a Model was created. All records are stored in UTC time zone
 * @member {Date} created
 */
ModelDefault.prototype['created'] = undefined;




export default InstantWinLog;

