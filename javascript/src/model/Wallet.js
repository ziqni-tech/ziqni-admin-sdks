/**
 * ZIQNI Admin API
 * Ziqni Application Services are used to manage and configure spaces.  Change log:  2024-02-27 Added rewards reduced to the LeaderboardEntry response
 *
 * The version of the OpenAPI document: 3.0.19
 * Contact: support@ziqni.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ModelDefault from './ModelDefault';
import OptParamModels from './OptParamModels';
import WalletAllOf from './WalletAllOf';
import WalletTypeReduced from './WalletTypeReduced';

/**
 * The Wallet model module.
 * @module model/Wallet
 * @version 0.0.26
 */
class Wallet {
    /**
     * Constructs a new <code>Wallet</code>.
     * @alias module:model/Wallet
     * @implements module:model/ModelDefault
     * @implements module:model/OptParamModels
     * @implements module:model/WalletAllOf
     * @param id {String} A unique system generated identifier
     * @param spaceName {String} This is the space name which is linked to the account
     * @param created {Date} ISO8601 timestamp for when a Model was created. All records are stored in UTC time zone
     * @param memberId {String} player id
     * @param balance {Number} balance
     */
    constructor(id, spaceName, created, memberId, balance) { 
        ModelDefault.initialize(this, id, spaceName, created);OptParamModels.initialize(this);WalletAllOf.initialize(this, memberId, balance);
        Wallet.initialize(this, id, spaceName, created, memberId, balance);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, spaceName, created, memberId, balance) { 
        obj['id'] = id;
        obj['spaceName'] = spaceName;
        obj['created'] = created;
        obj['memberId'] = memberId;
        obj['balance'] = balance;
    }

    /**
     * Constructs a <code>Wallet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Wallet} obj Optional instance to populate.
     * @return {module:model/Wallet} The populated <code>Wallet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Wallet();
            ModelDefault.constructFromObject(data, obj);
            OptParamModels.constructFromObject(data, obj);
            WalletAllOf.constructFromObject(data, obj);

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('spaceName')) {
                obj['spaceName'] = ApiClient.convertToType(data['spaceName'], 'String');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Date');
            }
            if (data.hasOwnProperty('customFields')) {
                obj['customFields'] = ApiClient.convertToType(data['customFields'], {'String': Object});
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], {'String': 'String'});
            }
            if (data.hasOwnProperty('walletType')) {
                obj['walletType'] = WalletTypeReduced.constructFromObject(data['walletType']);
            }
            if (data.hasOwnProperty('memberId')) {
                obj['memberId'] = ApiClient.convertToType(data['memberId'], 'String');
            }
            if (data.hasOwnProperty('balance')) {
                obj['balance'] = ApiClient.convertToType(data['balance'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * A unique system generated identifier
 * @member {String} id
 */
Wallet.prototype['id'] = undefined;

/**
 * This is the space name which is linked to the account
 * @member {String} spaceName
 */
Wallet.prototype['spaceName'] = undefined;

/**
 * ISO8601 timestamp for when a Model was created. All records are stored in UTC time zone
 * @member {Date} created
 */
Wallet.prototype['created'] = undefined;

/**
 * @member {Object.<String, Object>} customFields
 */
Wallet.prototype['customFields'] = undefined;

/**
 * A list of id's used to tag models
 * @member {Array.<String>} tags
 */
Wallet.prototype['tags'] = undefined;

/**
 * @member {Object.<String, String>} metadata
 */
Wallet.prototype['metadata'] = undefined;

/**
 * @member {module:model/WalletTypeReduced} walletType
 */
Wallet.prototype['walletType'] = undefined;

/**
 * player id
 * @member {String} memberId
 */
Wallet.prototype['memberId'] = undefined;

/**
 * balance
 * @member {Number} balance
 */
Wallet.prototype['balance'] = undefined;


// Implement ModelDefault interface:
/**
 * A unique system generated identifier
 * @member {String} id
 */
ModelDefault.prototype['id'] = undefined;
/**
 * This is the space name which is linked to the account
 * @member {String} spaceName
 */
ModelDefault.prototype['spaceName'] = undefined;
/**
 * ISO8601 timestamp for when a Model was created. All records are stored in UTC time zone
 * @member {Date} created
 */
ModelDefault.prototype['created'] = undefined;
// Implement OptParamModels interface:
/**
 * @member {Object.<String, Object>} customFields
 */
OptParamModels.prototype['customFields'] = undefined;
/**
 * A list of id's used to tag models
 * @member {Array.<String>} tags
 */
OptParamModels.prototype['tags'] = undefined;
/**
 * @member {Object.<String, String>} metadata
 */
OptParamModels.prototype['metadata'] = undefined;
// Implement WalletAllOf interface:
/**
 * @member {module:model/WalletTypeReduced} walletType
 */
WalletAllOf.prototype['walletType'] = undefined;
/**
 * player id
 * @member {String} memberId
 */
WalletAllOf.prototype['memberId'] = undefined;
/**
 * balance
 * @member {Number} balance
 */
WalletAllOf.prototype['balance'] = undefined;




export default Wallet;

