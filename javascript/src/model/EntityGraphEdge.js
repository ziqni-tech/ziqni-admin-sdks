/**
 * ZIQNI Admin API
 * Ziqni Application Services are used to manage and configure spaces.
 *
 * The version of the OpenAPI document: 3.0.5
 * Contact: support@ziqni.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EntityGraphEdge model module.
 * @module model/EntityGraphEdge
 * @version 0.0.26
 */
class EntityGraphEdge {
    /**
     * Constructs a new <code>EntityGraphEdge</code>.
     * 
     * @alias module:model/EntityGraphEdge
     * @param ordering {Number} 
     */
    constructor(ordering) { 
        
        EntityGraphEdge.initialize(this, ordering);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ordering) { 
        obj['ordering'] = ordering;
    }

    /**
     * Constructs a <code>EntityGraphEdge</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EntityGraphEdge} obj Optional instance to populate.
     * @return {module:model/EntityGraphEdge} The populated <code>EntityGraphEdge</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EntityGraphEdge();

            if (data.hasOwnProperty('ordering')) {
                obj['ordering'] = ApiClient.convertToType(data['ordering'], 'Number');
            }
            if (data.hasOwnProperty('constraints')) {
                obj['constraints'] = ApiClient.convertToType(data['constraints'], ['String']);
            }
            if (data.hasOwnProperty('tailEntityId')) {
                obj['tailEntityId'] = ApiClient.convertToType(data['tailEntityId'], 'String');
            }
            if (data.hasOwnProperty('headEntityId')) {
                obj['headEntityId'] = ApiClient.convertToType(data['headEntityId'], 'String');
            }
            if (data.hasOwnProperty('graphEdgeType')) {
                obj['graphEdgeType'] = ApiClient.convertToType(data['graphEdgeType'], Object);
            }
        }
        return obj;
    }


}

/**
 * 
 * @member {Number} ordering
 */
EntityGraphEdge.prototype['ordering'] = undefined;

/**
 * 
 * @member {Array.<String>} constraints
 */
EntityGraphEdge.prototype['constraints'] = undefined;

/**
 * X the tail of the edge 
 * @member {String} tailEntityId
 */
EntityGraphEdge.prototype['tailEntityId'] = undefined;

/**
 * Y the head of the edge.
 * @member {String} headEntityId
 */
EntityGraphEdge.prototype['headEntityId'] = undefined;

/**
 * 
 * @member {Object} graphEdgeType
 */
EntityGraphEdge.prototype['graphEdgeType'] = undefined;






export default EntityGraphEdge;

