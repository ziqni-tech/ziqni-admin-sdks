/**
 * ZIQNI Admin API
 * Ziqni Application Services are used to manage and configure spaces.  Change log:  2024-02-27 Added rewards reduced to the LeaderboardEntry response
 *
 * The version of the OpenAPI document: 3.0.19
 * Contact: support@ziqni.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WalletTransaction model module.
 * @module model/WalletTransaction
 * @version 0.0.26
 */
class WalletTransaction {
    /**
     * Constructs a new <code>WalletTransaction</code>.
     * 
     * @alias module:model/WalletTransaction
     */
    constructor() { 
        
        WalletTransaction.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WalletTransaction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WalletTransaction} obj Optional instance to populate.
     * @return {module:model/WalletTransaction} The populated <code>WalletTransaction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WalletTransaction();

            if (data.hasOwnProperty('transactionId')) {
                obj['transactionId'] = ApiClient.convertToType(data['transactionId'], 'Number');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('walletId')) {
                obj['walletId'] = ApiClient.convertToType(data['walletId'], 'String');
            }
            if (data.hasOwnProperty('spaceName')) {
                obj['spaceName'] = ApiClient.convertToType(data['spaceName'], 'String');
            }
            if (data.hasOwnProperty('transactionType')) {
                obj['transactionType'] = ApiClient.convertToType(data['transactionType'], 'String');
            }
            if (data.hasOwnProperty('counterPartyWalletId')) {
                obj['counterPartyWalletId'] = ApiClient.convertToType(data['counterPartyWalletId'], 'String');
            }
            if (data.hasOwnProperty('transactionDate')) {
                obj['transactionDate'] = ApiClient.convertToType(data['transactionDate'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * The unique identifier of the transaction
 * @member {Number} transactionId
 */
WalletTransaction.prototype['transactionId'] = undefined;

/**
 * amount
 * @member {Number} amount
 */
WalletTransaction.prototype['amount'] = undefined;

/**
 * source wallet
 * @member {String} walletId
 */
WalletTransaction.prototype['walletId'] = undefined;

/**
 * account id
 * @member {String} spaceName
 */
WalletTransaction.prototype['spaceName'] = undefined;

/**
 * credit,debit or transfer
 * @member {String} transactionType
 */
WalletTransaction.prototype['transactionType'] = undefined;

/**
 * target wallet  id
 * @member {String} counterPartyWalletId
 */
WalletTransaction.prototype['counterPartyWalletId'] = undefined;

/**
 * The date of the transaction
 * @member {Date} transactionDate
 */
WalletTransaction.prototype['transactionDate'] = undefined;






export default WalletTransaction;

