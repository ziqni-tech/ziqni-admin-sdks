/**
 * ZIQNI Admin API
 * Ziqni Application Services are used to manage and configure spaces.  Change log:  2024-02-27 Added rewards reduced to the LeaderboardEntry response
 *
 * The version of the OpenAPI document: 3.0.19
 * Contact: support@ziqni.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InstantWinLogAllOf model module.
 * @module model/InstantWinLogAllOf
 * @version 0.0.26
 */
class InstantWinLogAllOf {
    /**
     * Constructs a new <code>InstantWinLogAllOf</code>.
     * @alias module:model/InstantWinLogAllOf
     */
    constructor() { 
        
        InstantWinLogAllOf.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InstantWinLogAllOf</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InstantWinLogAllOf} obj Optional instance to populate.
     * @return {module:model/InstantWinLogAllOf} The populated <code>InstantWinLogAllOf</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InstantWinLogAllOf();

            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('memberId')) {
                obj['memberId'] = ApiClient.convertToType(data['memberId'], 'String');
            }
            if (data.hasOwnProperty('awardId')) {
                obj['awardId'] = ApiClient.convertToType(data['awardId'], 'String');
            }
            if (data.hasOwnProperty('spinId')) {
                obj['spinId'] = ApiClient.convertToType(data['spinId'], 'Number');
            }
            if (data.hasOwnProperty('spinsAdded')) {
                obj['spinsAdded'] = ApiClient.convertToType(data['spinsAdded'], 'Number');
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * The partner tenant identifier
 * @member {String} accountId
 */
InstantWinLogAllOf.prototype['accountId'] = undefined;

/**
 * The partner player identifier
 * @member {String} memberId
 */
InstantWinLogAllOf.prototype['memberId'] = undefined;

/**
 * The award identifier associated with the log
 * @member {String} awardId
 */
InstantWinLogAllOf.prototype['awardId'] = undefined;

/**
 * The spin identifier
 * @member {Number} spinId
 */
InstantWinLogAllOf.prototype['spinId'] = undefined;

/**
 * The number of spins added in this log entry
 * @member {Number} spinsAdded
 */
InstantWinLogAllOf.prototype['spinsAdded'] = undefined;

/**
 * The timestamp when the log entry was created
 * @member {Date} timestamp
 */
InstantWinLogAllOf.prototype['timestamp'] = undefined;






export default InstantWinLogAllOf;

