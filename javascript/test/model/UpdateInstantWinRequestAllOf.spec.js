/**
 * ZIQNI Admin API
 * Ziqni Application Services are used to manage and configure spaces.  Change log:  2024-02-27 Added rewards reduced to the LeaderboardEntry response
 *
 * The version of the OpenAPI document: 3.0.19
 * Contact: support@ziqni.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.@ZiqniTechAdminApiClient);
  }
}(this, function(expect, @ZiqniTechAdminApiClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new @ZiqniTechAdminApiClient.UpdateInstantWinRequestAllOf();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UpdateInstantWinRequestAllOf', function() {
    it('should create an instance of UpdateInstantWinRequestAllOf', function() {
      // uncomment below and update the code to test UpdateInstantWinRequestAllOf
      //var instance = new @ZiqniTechAdminApiClient.UpdateInstantWinRequestAllOf();
      //expect(instance).to.be.a(@ZiqniTechAdminApiClient.UpdateInstantWinRequestAllOf);
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new @ZiqniTechAdminApiClient.UpdateInstantWinRequestAllOf();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new @ZiqniTechAdminApiClient.UpdateInstantWinRequestAllOf();
      //expect(instance).to.be();
    });

    it('should have the property termsAndConditions (base name: "termsAndConditions")', function() {
      // uncomment below and update the code to test the property termsAndConditions
      //var instance = new @ZiqniTechAdminApiClient.UpdateInstantWinRequestAllOf();
      //expect(instance).to.be();
    });

    it('should have the property constraints (base name: "constraints")', function() {
      // uncomment below and update the code to test the property constraints
      //var instance = new @ZiqniTechAdminApiClient.UpdateInstantWinRequestAllOf();
      //expect(instance).to.be();
    });

    it('should have the property statusCode (base name: "statusCode")', function() {
      // uncomment below and update the code to test the property statusCode
      //var instance = new @ZiqniTechAdminApiClient.UpdateInstantWinRequestAllOf();
      //expect(instance).to.be();
    });

    it('should have the property startDate (base name: "startDate")', function() {
      // uncomment below and update the code to test the property startDate
      //var instance = new @ZiqniTechAdminApiClient.UpdateInstantWinRequestAllOf();
      //expect(instance).to.be();
    });

    it('should have the property endDate (base name: "endDate")', function() {
      // uncomment below and update the code to test the property endDate
      //var instance = new @ZiqniTechAdminApiClient.UpdateInstantWinRequestAllOf();
      //expect(instance).to.be();
    });

    it('should have the property instantWinType (base name: "instantWinType")', function() {
      // uncomment below and update the code to test the property instantWinType
      //var instance = new @ZiqniTechAdminApiClient.UpdateInstantWinRequestAllOf();
      //expect(instance).to.be();
    });

    it('should have the property icon (base name: "icon")', function() {
      // uncomment below and update the code to test the property icon
      //var instance = new @ZiqniTechAdminApiClient.UpdateInstantWinRequestAllOf();
      //expect(instance).to.be();
    });

    it('should have the property banner (base name: "banner")', function() {
      // uncomment below and update the code to test the property banner
      //var instance = new @ZiqniTechAdminApiClient.UpdateInstantWinRequestAllOf();
      //expect(instance).to.be();
    });

    it('should have the property bannerLowResolution (base name: "bannerLowResolution")', function() {
      // uncomment below and update the code to test the property bannerLowResolution
      //var instance = new @ZiqniTechAdminApiClient.UpdateInstantWinRequestAllOf();
      //expect(instance).to.be();
    });

    it('should have the property bannerHighResolution (base name: "bannerHighResolution")', function() {
      // uncomment below and update the code to test the property bannerHighResolution
      //var instance = new @ZiqniTechAdminApiClient.UpdateInstantWinRequestAllOf();
      //expect(instance).to.be();
    });

    it('should have the property tiles (base name: "tiles")', function() {
      // uncomment below and update the code to test the property tiles
      //var instance = new @ZiqniTechAdminApiClient.UpdateInstantWinRequestAllOf();
      //expect(instance).to.be();
    });

    it('should have the property style (base name: "style")', function() {
      // uncomment below and update the code to test the property style
      //var instance = new @ZiqniTechAdminApiClient.UpdateInstantWinRequestAllOf();
      //expect(instance).to.be();
    });

  });

}));
