/*
 * ZIQNI Admin API
 *
 * Ziqni Application Services are used to manage and configure spaces.
 *
 * The version of the OpenAPI document: 3.0.9
 * Contact: support@ziqni.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Ziqni.Api;
using Ziqni.Model;
using Ziqni.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Ziqni.Test
{
    /// <summary>
    ///  Class for testing CreateEventRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CreateEventRequestTests
    {
        // TODO uncomment below to declare an instance variable for CreateEventRequest
        //private CreateEventRequest instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of CreateEventRequest
            //instance = new CreateEventRequest();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CreateEventRequest
        /// </summary>
        [Test]
        public void CreateEventRequestInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" CreateEventRequest
            //Assert.IsInstanceOf(typeof(CreateEventRequest), instance);
        }


        /// <summary>
        /// Test the property 'MemberRefId'
        /// </summary>
        [Test]
        public void MemberRefIdTest()
        {
            // TODO unit test for the property 'MemberRefId'
        }
        /// <summary>
        /// Test the property 'Action'
        /// </summary>
        [Test]
        public void ActionTest()
        {
            // TODO unit test for the property 'Action'
        }
        /// <summary>
        /// Test the property 'BatchId'
        /// </summary>
        [Test]
        public void BatchIdTest()
        {
            // TODO unit test for the property 'BatchId'
        }
        /// <summary>
        /// Test the property 'EntityRefId'
        /// </summary>
        [Test]
        public void EntityRefIdTest()
        {
            // TODO unit test for the property 'EntityRefId'
        }
        /// <summary>
        /// Test the property 'SourceValue'
        /// </summary>
        [Test]
        public void SourceValueTest()
        {
            // TODO unit test for the property 'SourceValue'
        }
        /// <summary>
        /// Test the property 'TransactionTimestamp'
        /// </summary>
        [Test]
        public void TransactionTimestampTest()
        {
            // TODO unit test for the property 'TransactionTimestamp'
        }
        /// <summary>
        /// Test the property 'Tags'
        /// </summary>
        [Test]
        public void TagsTest()
        {
            // TODO unit test for the property 'Tags'
        }
        /// <summary>
        /// Test the property 'EventRefId'
        /// </summary>
        [Test]
        public void EventRefIdTest()
        {
            // TODO unit test for the property 'EventRefId'
        }
        /// <summary>
        /// Test the property 'MemberId'
        /// </summary>
        [Test]
        public void MemberIdTest()
        {
            // TODO unit test for the property 'MemberId'
        }
        /// <summary>
        /// Test the property 'CustomFields'
        /// </summary>
        [Test]
        public void CustomFieldsTest()
        {
            // TODO unit test for the property 'CustomFields'
        }
        /// <summary>
        /// Test the property 'UnitOfMeasure'
        /// </summary>
        [Test]
        public void UnitOfMeasureTest()
        {
            // TODO unit test for the property 'UnitOfMeasure'
        }

    }

}
