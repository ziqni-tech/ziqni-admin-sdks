/*
 * ZIQNI Admin API
 *
 * Ziqni Application Services are used to manage and configure spaces.
 *
 * The version of the OpenAPI document: 3.0.9
 * Contact: support@ziqni.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Ziqni.Client.OpenAPIDateConverter;

namespace Ziqni.Model
{
    /// <summary>
    /// The status of the entrant * -403, \&quot;Unknown\&quot; * -100, \&quot;Deleted\&quot; * -50, \&quot;WrongGroups\&quot; * -12, \&quot;Disqualified\&quot; * -11, \&quot;Substituted\&quot; * -10, \&quot;Injured\&quot; * -1, \&quot;OptInRequired\&quot; * 0, \&quot;Registered\&quot; * 1, \&quot;Entered\&quot; * 10, \&quot;Playing\&quot; * 20, \&quot;Finished\&quot; * 100, \&quot;Finalised\&quot;
    /// </summary>
    /// <value>The status of the entrant * -403, \&quot;Unknown\&quot; * -100, \&quot;Deleted\&quot; * -50, \&quot;WrongGroups\&quot; * -12, \&quot;Disqualified\&quot; * -11, \&quot;Substituted\&quot; * -10, \&quot;Injured\&quot; * -1, \&quot;OptInRequired\&quot; * 0, \&quot;Registered\&quot; * 1, \&quot;Entered\&quot; * 10, \&quot;Playing\&quot; * 20, \&quot;Finished\&quot; * 100, \&quot;Finalised\&quot;</value>
    
    [JsonConverter(typeof(StringEnumConverter))]
    
    public enum EntrantStatus
    {
        /// <summary>
        /// Enum NotEntered for value: NotEntered
        /// </summary>
        [EnumMember(Value = "NotEntered")]
        NotEntered = 1,

        /// <summary>
        /// Enum Entering for value: Entering
        /// </summary>
        [EnumMember(Value = "Entering")]
        Entering = 2,

        /// <summary>
        /// Enum Entrant for value: Entrant
        /// </summary>
        [EnumMember(Value = "Entrant")]
        Entrant = 3,

        /// <summary>
        /// Enum Preparing for value: Preparing
        /// </summary>
        [EnumMember(Value = "Preparing")]
        Preparing = 4,

        /// <summary>
        /// Enum Running for value: Running
        /// </summary>
        [EnumMember(Value = "Running")]
        Running = 5,

        /// <summary>
        /// Enum Completing for value: Completing
        /// </summary>
        [EnumMember(Value = "Completing")]
        Completing = 6,

        /// <summary>
        /// Enum Completed for value: Completed
        /// </summary>
        [EnumMember(Value = "Completed")]
        Completed = 7,

        /// <summary>
        /// Enum Excluding for value: Excluding
        /// </summary>
        [EnumMember(Value = "Excluding")]
        Excluding = 8,

        /// <summary>
        /// Enum Excluded for value: Excluded
        /// </summary>
        [EnumMember(Value = "Excluded")]
        Excluded = 9

    }

}
