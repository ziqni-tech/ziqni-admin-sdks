/*
 * ZIQNI Admin API
 *
 * Ziqni Application Services are used to manage and configure spaces.
 *
 * The version of the OpenAPI document: 3.0.1
 * Contact: support@ziqni.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Ziqni
{
    /// <summary>
    /// The status of the entrant * -403, \&quot;Unknown\&quot; * -100, \&quot;Deleted\&quot; * -50, \&quot;WrongGroups\&quot; * -12, \&quot;Disqualified\&quot; * -11, \&quot;Substituted\&quot; * -10, \&quot;Injured\&quot; * -1, \&quot;OptInRequired\&quot; * 0, \&quot;Registered\&quot; * 1, \&quot;Entered\&quot; * 10, \&quot;Playing\&quot; * 20, \&quot;Finished\&quot; * 100, \&quot;Finalised\&quot;
    /// </summary>
    /// <value>The status of the entrant * -403, \&quot;Unknown\&quot; * -100, \&quot;Deleted\&quot; * -50, \&quot;WrongGroups\&quot; * -12, \&quot;Disqualified\&quot; * -11, \&quot;Substituted\&quot; * -10, \&quot;Injured\&quot; * -1, \&quot;OptInRequired\&quot; * 0, \&quot;Registered\&quot; * 1, \&quot;Entered\&quot; * 10, \&quot;Playing\&quot; * 20, \&quot;Finished\&quot; * 100, \&quot;Finalised\&quot;</value>
    
    [JsonConverter(typeof(StringEnumConverter))]
    
    public enum EntrantStatus
    {
        /// <summary>
        /// Enum Unknown for value: Unknown
        /// </summary>
        [EnumMember(Value = "Unknown")]
        Unknown = 1,

        /// <summary>
        /// Enum Deleted for value: Deleted
        /// </summary>
        [EnumMember(Value = "Deleted")]
        Deleted = 2,

        /// <summary>
        /// Enum WrongGroups for value: WrongGroups
        /// </summary>
        [EnumMember(Value = "WrongGroups")]
        WrongGroups = 3,

        /// <summary>
        /// Enum Disqualified for value: Disqualified
        /// </summary>
        [EnumMember(Value = "Disqualified")]
        Disqualified = 4,

        /// <summary>
        /// Enum Substituted for value: Substituted
        /// </summary>
        [EnumMember(Value = "Substituted")]
        Substituted = 5,

        /// <summary>
        /// Enum Injured for value: Injured
        /// </summary>
        [EnumMember(Value = "Injured")]
        Injured = 6,

        /// <summary>
        /// Enum OptInRequired for value: OptInRequired
        /// </summary>
        [EnumMember(Value = "OptInRequired")]
        OptInRequired = 7,

        /// <summary>
        /// Enum Registered for value: Registered
        /// </summary>
        [EnumMember(Value = "Registered")]
        Registered = 8,

        /// <summary>
        /// Enum Entered for value: Entered
        /// </summary>
        [EnumMember(Value = "Entered")]
        Entered = 9,

        /// <summary>
        /// Enum Playing for value: Playing
        /// </summary>
        [EnumMember(Value = "Playing")]
        Playing = 10,

        /// <summary>
        /// Enum Finished for value: Finished
        /// </summary>
        [EnumMember(Value = "Finished")]
        Finished = 11,

        /// <summary>
        /// Enum Finalised for value: Finalised
        /// </summary>
        [EnumMember(Value = "Finalised")]
        Finalised = 12

    }

}
