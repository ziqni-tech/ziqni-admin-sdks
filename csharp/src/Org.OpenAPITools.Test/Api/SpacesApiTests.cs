/*
 * ZIQNI Admin API
 *
 * Ziqni Application Services are used to manage and configure spaces.
 *
 * The version of the OpenAPI document: 3.0.1
 * Contact: support@ziqni.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing SpacesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SpacesApiTests
    {
        private SpacesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new SpacesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SpacesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' SpacesApi
            //Assert.IsInstanceOf(typeof(SpacesApi), instance);
        }

        
        /// <summary>
        /// Test CreateSpace
        /// </summary>
        [Test]
        public void CreateSpaceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<CreateSpaceRequest> body = null;
            //var response = instance.CreateSpace(body);
            //Assert.IsInstanceOf(typeof(ApiResponse), response, "response is ApiResponse");
        }
        
        /// <summary>
        /// Test DeleteSpaces
        /// </summary>
        [Test]
        public void DeleteSpacesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string spaceName = null;
            //var response = instance.DeleteSpaces(spaceName);
            //Assert.IsInstanceOf(typeof(ApiResponse), response, "response is ApiResponse");
        }
        
        /// <summary>
        /// Test GetSpaceInfromation
        /// </summary>
        [Test]
        public void GetSpaceInfromationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? limit = null;
            //int? skip = null;
            //var response = instance.GetSpaceInfromation(limit, skip);
            //Assert.IsInstanceOf(typeof(SpaceResponse), response, "response is SpaceResponse");
        }
        
        /// <summary>
        /// Test GetSpacesByName
        /// </summary>
        [Test]
        public void GetSpacesByNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string spaceName = null;
            //int? limit = null;
            //int? skip = null;
            //var response = instance.GetSpacesByName(spaceName, limit, skip);
            //Assert.IsInstanceOf(typeof(SpaceResponse), response, "response is SpaceResponse");
        }
        
        /// <summary>
        /// Test UpdateSpace
        /// </summary>
        [Test]
        public void UpdateSpaceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateSpaceRequest body = null;
            //var response = instance.UpdateSpace(body);
            //Assert.IsInstanceOf(typeof(ApiResponse), response, "response is ApiResponse");
        }
        
    }

}
