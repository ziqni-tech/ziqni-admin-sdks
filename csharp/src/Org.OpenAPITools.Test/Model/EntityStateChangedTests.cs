/*
 * ZIQNI Admin API
 *
 * Ziqni Application Services are used to manage and configure spaces.
 *
 * The version of the OpenAPI document: 3.0.1
 * Contact: support@ziqni.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing EntityStateChanged
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class EntityStateChangedTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for EntityStateChanged
        //private EntityStateChanged instance;

        public EntityStateChangedTests()
        {
            // TODO uncomment below to create an instance of EntityStateChanged
            //instance = new EntityStateChanged();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of EntityStateChanged
        /// </summary>
        [Fact]
        public void EntityStateChangedInstanceTest()
        {
            // TODO uncomment below to test "IsType" EntityStateChanged
            //Assert.IsType<EntityStateChanged>(instance);
        }


        /// <summary>
        /// Test the property 'EntityId'
        /// </summary>
        [Fact]
        public void EntityIdTest()
        {
            // TODO unit test for the property 'EntityId'
        }
        /// <summary>
        /// Test the property 'EntityType'
        /// </summary>
        [Fact]
        public void EntityTypeTest()
        {
            // TODO unit test for the property 'EntityType'
        }
        /// <summary>
        /// Test the property 'ChangedAt'
        /// </summary>
        [Fact]
        public void ChangedAtTest()
        {
            // TODO unit test for the property 'ChangedAt'
        }
        /// <summary>
        /// Test the property 'ChangedBy'
        /// </summary>
        [Fact]
        public void ChangedByTest()
        {
            // TODO unit test for the property 'ChangedBy'
        }
        /// <summary>
        /// Test the property 'TypeOffChange'
        /// </summary>
        [Fact]
        public void TypeOffChangeTest()
        {
            // TODO unit test for the property 'TypeOffChange'
        }
        /// <summary>
        /// Test the property 'DisplayName'
        /// </summary>
        [Fact]
        public void DisplayNameTest()
        {
            // TODO unit test for the property 'DisplayName'
        }
        /// <summary>
        /// Test the property 'AccountId'
        /// </summary>
        [Fact]
        public void AccountIdTest()
        {
            // TODO unit test for the property 'AccountId'
        }
        /// <summary>
        /// Test the property 'SequenceNumber'
        /// </summary>
        [Fact]
        public void SequenceNumberTest()
        {
            // TODO unit test for the property 'SequenceNumber'
        }
        /// <summary>
        /// Test the property 'EntityRefId'
        /// </summary>
        [Fact]
        public void EntityRefIdTest()
        {
            // TODO unit test for the property 'EntityRefId'
        }
        /// <summary>
        /// Test the property 'EntityParentId'
        /// </summary>
        [Fact]
        public void EntityParentIdTest()
        {
            // TODO unit test for the property 'EntityParentId'
        }
        /// <summary>
        /// Test the property 'Metadata'
        /// </summary>
        [Fact]
        public void MetadataTest()
        {
            // TODO unit test for the property 'Metadata'
        }
        /// <summary>
        /// Test the property 'PreviousState'
        /// </summary>
        [Fact]
        public void PreviousStateTest()
        {
            // TODO unit test for the property 'PreviousState'
        }
        /// <summary>
        /// Test the property 'CurrentState'
        /// </summary>
        [Fact]
        public void CurrentStateTest()
        {
            // TODO unit test for the property 'CurrentState'
        }

    }

}
