/*
 * ZIQNI Admin API
 * Ziqni Application Services are used to manage and configure spaces.
 *
 * The version of the OpenAPI document: 3.0.1
 * Contact: support@ziqni.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ziqni.sdk.admin.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * LeaderboardMember
 */
@JsonPropertyOrder({
  LeaderboardMember.JSON_PROPERTY_NAME,
  LeaderboardMember.JSON_PROPERTY_MEMBER_ID,
  LeaderboardMember.JSON_PROPERTY_MEMBER_REF_ID,
  LeaderboardMember.JSON_PROPERTY_RANK_CHANGE_FROM,
  LeaderboardMember.JSON_PROPERTY_RANK_CHANGE_TYPE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class LeaderboardMember {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_MEMBER_ID = "memberId";
  private String memberId;

  public static final String JSON_PROPERTY_MEMBER_REF_ID = "memberRefId";
  private String memberRefId;

  public static final String JSON_PROPERTY_RANK_CHANGE_FROM = "rankChangeFrom";
  private Integer rankChangeFrom;

  public static final String JSON_PROPERTY_RANK_CHANGE_TYPE = "rankChangeType";
  private Integer rankChangeType;


  public LeaderboardMember name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the player
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Player 1", required = true, value = "The name of the player")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public LeaderboardMember memberId(String memberId) {
    this.memberId = memberId;
    return this;
  }

   /**
   * Unique system identifier of a Member
   * @return memberId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Dc4swmQBVd51K6gPQqFx", required = true, value = "Unique system identifier of a Member")
  @JsonProperty(JSON_PROPERTY_MEMBER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMemberId() {
    return memberId;
  }


  @JsonProperty(JSON_PROPERTY_MEMBER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMemberId(String memberId) {
    this.memberId = memberId;
  }


  public LeaderboardMember memberRefId(String memberRefId) {
    this.memberRefId = memberRefId;
    return this;
  }

   /**
   * The reference to this member in your system
   * @return memberRefId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Player-1", required = true, value = "The reference to this member in your system")
  @JsonProperty(JSON_PROPERTY_MEMBER_REF_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMemberRefId() {
    return memberRefId;
  }


  @JsonProperty(JSON_PROPERTY_MEMBER_REF_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMemberRefId(String memberRefId) {
    this.memberRefId = memberRefId;
  }


  public LeaderboardMember rankChangeFrom(Integer rankChangeFrom) {
    this.rankChangeFrom = rankChangeFrom;
    return this;
  }

   /**
   * Previous rank held, null if no changes are recorded
   * @return rankChangeFrom
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Previous rank held, null if no changes are recorded")
  @JsonProperty(JSON_PROPERTY_RANK_CHANGE_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRankChangeFrom() {
    return rankChangeFrom;
  }


  @JsonProperty(JSON_PROPERTY_RANK_CHANGE_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRankChangeFrom(Integer rankChangeFrom) {
    this.rankChangeFrom = rankChangeFrom;
  }


  public LeaderboardMember rankChangeType(Integer rankChangeType) {
    this.rankChangeType = rankChangeType;
    return this;
  }

   /**
   * [-1] for rank-down, like 5 to 8. [0] for no change, [1] for rank-up like 9 to 3
   * @return rankChangeType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "[-1] for rank-down, like 5 to 8. [0] for no change, [1] for rank-up like 9 to 3")
  @JsonProperty(JSON_PROPERTY_RANK_CHANGE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRankChangeType() {
    return rankChangeType;
  }


  @JsonProperty(JSON_PROPERTY_RANK_CHANGE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRankChangeType(Integer rankChangeType) {
    this.rankChangeType = rankChangeType;
  }


  /**
   * Return true if this LeaderboardMember object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LeaderboardMember leaderboardMember = (LeaderboardMember) o;
    return Objects.equals(this.name, leaderboardMember.name) &&
        Objects.equals(this.memberId, leaderboardMember.memberId) &&
        Objects.equals(this.memberRefId, leaderboardMember.memberRefId) &&
        Objects.equals(this.rankChangeFrom, leaderboardMember.rankChangeFrom) &&
        Objects.equals(this.rankChangeType, leaderboardMember.rankChangeType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, memberId, memberRefId, rankChangeFrom, rankChangeType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LeaderboardMember {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    memberId: ").append(toIndentedString(memberId)).append("\n");
    sb.append("    memberRefId: ").append(toIndentedString(memberRefId)).append("\n");
    sb.append("    rankChangeFrom: ").append(toIndentedString(rankChangeFrom)).append("\n");
    sb.append("    rankChangeType: ").append(toIndentedString(rankChangeType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

