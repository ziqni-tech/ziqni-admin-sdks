/*
 * ZIQNI Admin API
 * Ziqni Application Services are used to manage and configure spaces.
 *
 * The version of the OpenAPI document: 3.0.1
 * Contact: support@ziqni.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ziqni.sdk.admin.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ziqni.sdk.admin.model.RoundType;
import com.ziqni.sdk.admin.model.Strategy;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * UpdateContestRequestAllOf
 */
@JsonPropertyOrder({
  UpdateContestRequestAllOf.JSON_PROPERTY_NAME,
  UpdateContestRequestAllOf.JSON_PROPERTY_DESCRIPTION,
  UpdateContestRequestAllOf.JSON_PROPERTY_TERMS_AND_CONDITIONS,
  UpdateContestRequestAllOf.JSON_PROPERTY_ROUND_TYPE,
  UpdateContestRequestAllOf.JSON_PROPERTY_MAX_NUMBER_OF_ENTRANTS,
  UpdateContestRequestAllOf.JSON_PROPERTY_MIN_NUMBER_OF_ENTRANTS,
  UpdateContestRequestAllOf.JSON_PROPERTY_SCHEDULED_START_DATE,
  UpdateContestRequestAllOf.JSON_PROPERTY_SCHEDULED_END_DATE,
  UpdateContestRequestAllOf.JSON_PROPERTY_STRATEGIES,
  UpdateContestRequestAllOf.JSON_PROPERTY_CONSTRAINTS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class UpdateContestRequestAllOf {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_TERMS_AND_CONDITIONS = "termsAndConditions";
  private String termsAndConditions;

  public static final String JSON_PROPERTY_ROUND_TYPE = "roundType";
  private RoundType roundType;

  public static final String JSON_PROPERTY_MAX_NUMBER_OF_ENTRANTS = "maxNumberOfEntrants";
  private Integer maxNumberOfEntrants;

  public static final String JSON_PROPERTY_MIN_NUMBER_OF_ENTRANTS = "minNumberOfEntrants";
  private Integer minNumberOfEntrants;

  public static final String JSON_PROPERTY_SCHEDULED_START_DATE = "scheduledStartDate";
  private OffsetDateTime scheduledStartDate;

  public static final String JSON_PROPERTY_SCHEDULED_END_DATE = "scheduledEndDate";
  private OffsetDateTime scheduledEndDate;

  public static final String JSON_PROPERTY_STRATEGIES = "strategies";
  private Strategy strategies;

  public static final String JSON_PROPERTY_CONSTRAINTS = "constraints";
  private List<String> constraints = null;


  public UpdateContestRequestAllOf name(String name) {
    this.name = name;
    return this;
  }

   /**
   * A name for the Contest. Can be translated
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Fish and Chips", value = "A name for the Contest. Can be translated")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public UpdateContestRequestAllOf description(String description) {
    this.description = description;
    return this;
  }

   /**
   * A name for the Contest. Can be translated
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Fish and Chips contest", value = "A name for the Contest. Can be translated")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public UpdateContestRequestAllOf termsAndConditions(String termsAndConditions) {
    this.termsAndConditions = termsAndConditions;
    return this;
  }

   /**
   * A name for the Contest. Can be translated
   * @return termsAndConditions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Buy 1 get 1 free", value = "A name for the Contest. Can be translated")
  @JsonProperty(JSON_PROPERTY_TERMS_AND_CONDITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTermsAndConditions() {
    return termsAndConditions;
  }


  @JsonProperty(JSON_PROPERTY_TERMS_AND_CONDITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTermsAndConditions(String termsAndConditions) {
    this.termsAndConditions = termsAndConditions;
  }


  public UpdateContestRequestAllOf roundType(RoundType roundType) {
    this.roundType = roundType;
    return this;
  }

   /**
   * Get roundType
   * @return roundType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ROUND_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RoundType getRoundType() {
    return roundType;
  }


  @JsonProperty(JSON_PROPERTY_ROUND_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRoundType(RoundType roundType) {
    this.roundType = roundType;
  }


  public UpdateContestRequestAllOf maxNumberOfEntrants(Integer maxNumberOfEntrants) {
    this.maxNumberOfEntrants = maxNumberOfEntrants;
    return this;
  }

   /**
   * Maximum number of entrants for the contest
   * @return maxNumberOfEntrants
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "9999", value = "Maximum number of entrants for the contest")
  @JsonProperty(JSON_PROPERTY_MAX_NUMBER_OF_ENTRANTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMaxNumberOfEntrants() {
    return maxNumberOfEntrants;
  }


  @JsonProperty(JSON_PROPERTY_MAX_NUMBER_OF_ENTRANTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxNumberOfEntrants(Integer maxNumberOfEntrants) {
    this.maxNumberOfEntrants = maxNumberOfEntrants;
  }


  public UpdateContestRequestAllOf minNumberOfEntrants(Integer minNumberOfEntrants) {
    this.minNumberOfEntrants = minNumberOfEntrants;
    return this;
  }

   /**
   * Minimum number of entrants for the contest
   * @return minNumberOfEntrants
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "Minimum number of entrants for the contest")
  @JsonProperty(JSON_PROPERTY_MIN_NUMBER_OF_ENTRANTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMinNumberOfEntrants() {
    return minNumberOfEntrants;
  }


  @JsonProperty(JSON_PROPERTY_MIN_NUMBER_OF_ENTRANTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinNumberOfEntrants(Integer minNumberOfEntrants) {
    this.minNumberOfEntrants = minNumberOfEntrants;
  }


  public UpdateContestRequestAllOf scheduledStartDate(OffsetDateTime scheduledStartDate) {
    this.scheduledStartDate = scheduledStartDate;
    return this;
  }

   /**
   * ISO8601 timestamp for when a Contest should start. All records are stored in UTC time zone
   * @return scheduledStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ISO8601 timestamp for when a Contest should start. All records are stored in UTC time zone")
  @JsonProperty(JSON_PROPERTY_SCHEDULED_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getScheduledStartDate() {
    return scheduledStartDate;
  }


  @JsonProperty(JSON_PROPERTY_SCHEDULED_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScheduledStartDate(OffsetDateTime scheduledStartDate) {
    this.scheduledStartDate = scheduledStartDate;
  }


  public UpdateContestRequestAllOf scheduledEndDate(OffsetDateTime scheduledEndDate) {
    this.scheduledEndDate = scheduledEndDate;
    return this;
  }

   /**
   * ISO8601 timestamp for when a Contest should end. All records are stored in UTC time zone
   * @return scheduledEndDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ISO8601 timestamp for when a Contest should end. All records are stored in UTC time zone")
  @JsonProperty(JSON_PROPERTY_SCHEDULED_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getScheduledEndDate() {
    return scheduledEndDate;
  }


  @JsonProperty(JSON_PROPERTY_SCHEDULED_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScheduledEndDate(OffsetDateTime scheduledEndDate) {
    this.scheduledEndDate = scheduledEndDate;
  }


  public UpdateContestRequestAllOf strategies(Strategy strategies) {
    this.strategies = strategies;
    return this;
  }

   /**
   * Get strategies
   * @return strategies
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STRATEGIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Strategy getStrategies() {
    return strategies;
  }


  @JsonProperty(JSON_PROPERTY_STRATEGIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStrategies(Strategy strategies) {
    this.strategies = strategies;
  }


  public UpdateContestRequestAllOf constraints(List<String> constraints) {
    this.constraints = constraints;
    return this;
  }

  public UpdateContestRequestAllOf addConstraintsItem(String constraintsItem) {
    if (this.constraints == null) {
      this.constraints = new ArrayList<>();
    }
    this.constraints.add(constraintsItem);
    return this;
  }

   /**
   * Additional constraints
   * @return constraints
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "- notifyMember - memberAcknowledgmentRequired - autoStart - auto Stop", value = "Additional constraints")
  @JsonProperty(JSON_PROPERTY_CONSTRAINTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getConstraints() {
    return constraints;
  }


  @JsonProperty(JSON_PROPERTY_CONSTRAINTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConstraints(List<String> constraints) {
    this.constraints = constraints;
  }


  /**
   * Return true if this UpdateContestRequest_allOf object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateContestRequestAllOf updateContestRequestAllOf = (UpdateContestRequestAllOf) o;
    return Objects.equals(this.name, updateContestRequestAllOf.name) &&
        Objects.equals(this.description, updateContestRequestAllOf.description) &&
        Objects.equals(this.termsAndConditions, updateContestRequestAllOf.termsAndConditions) &&
        Objects.equals(this.roundType, updateContestRequestAllOf.roundType) &&
        Objects.equals(this.maxNumberOfEntrants, updateContestRequestAllOf.maxNumberOfEntrants) &&
        Objects.equals(this.minNumberOfEntrants, updateContestRequestAllOf.minNumberOfEntrants) &&
        Objects.equals(this.scheduledStartDate, updateContestRequestAllOf.scheduledStartDate) &&
        Objects.equals(this.scheduledEndDate, updateContestRequestAllOf.scheduledEndDate) &&
        Objects.equals(this.strategies, updateContestRequestAllOf.strategies) &&
        Objects.equals(this.constraints, updateContestRequestAllOf.constraints);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, termsAndConditions, roundType, maxNumberOfEntrants, minNumberOfEntrants, scheduledStartDate, scheduledEndDate, strategies, constraints);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateContestRequestAllOf {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    termsAndConditions: ").append(toIndentedString(termsAndConditions)).append("\n");
    sb.append("    roundType: ").append(toIndentedString(roundType)).append("\n");
    sb.append("    maxNumberOfEntrants: ").append(toIndentedString(maxNumberOfEntrants)).append("\n");
    sb.append("    minNumberOfEntrants: ").append(toIndentedString(minNumberOfEntrants)).append("\n");
    sb.append("    scheduledStartDate: ").append(toIndentedString(scheduledStartDate)).append("\n");
    sb.append("    scheduledEndDate: ").append(toIndentedString(scheduledEndDate)).append("\n");
    sb.append("    strategies: ").append(toIndentedString(strategies)).append("\n");
    sb.append("    constraints: ").append(toIndentedString(constraints)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

