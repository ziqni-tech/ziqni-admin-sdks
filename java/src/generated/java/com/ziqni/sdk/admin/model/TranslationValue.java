/*
 * ZIQNI Admin API
 * Ziqni Application Services are used to manage and configure spaces.
 *
 * The version of the OpenAPI document: 3.0.1
 * Contact: support@ziqni.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ziqni.sdk.admin.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ziqni.sdk.admin.model.TranslatedField;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * TranslationValue
 */
@JsonPropertyOrder({
  TranslationValue.JSON_PROPERTY_KEY,
  TranslationValue.JSON_PROPERTY_TRANSLATED_FIELDS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class TranslationValue {
  public static final String JSON_PROPERTY_KEY = "key";
  private String key;

  public static final String JSON_PROPERTY_TRANSLATED_FIELDS = "translatedFields";
  private List<TranslatedField> translatedFields = null;


  public TranslationValue key(String key) {
    this.key = key;
    return this;
  }

   /**
   * This is the field from language key
   * @return key
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "en", value = "This is the field from language key")
  @JsonProperty(JSON_PROPERTY_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getKey() {
    return key;
  }


  @JsonProperty(JSON_PROPERTY_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKey(String key) {
    this.key = key;
  }


  public TranslationValue translatedFields(List<TranslatedField> translatedFields) {
    this.translatedFields = translatedFields;
    return this;
  }

  public TranslationValue addTranslatedFieldsItem(TranslatedField translatedFieldsItem) {
    if (this.translatedFields == null) {
      this.translatedFields = new ArrayList<>();
    }
    this.translatedFields.add(translatedFieldsItem);
    return this;
  }

   /**
   * Get translatedFields
   * @return translatedFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TRANSLATED_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<TranslatedField> getTranslatedFields() {
    return translatedFields;
  }


  @JsonProperty(JSON_PROPERTY_TRANSLATED_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTranslatedFields(List<TranslatedField> translatedFields) {
    this.translatedFields = translatedFields;
  }


  /**
   * Return true if this TranslationValue object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TranslationValue translationValue = (TranslationValue) o;
    return Objects.equals(this.key, translationValue.key) &&
        Objects.equals(this.translatedFields, translationValue.translatedFields);
  }

  @Override
  public int hashCode() {
    return Objects.hash(key, translatedFields);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TranslationValue {\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    translatedFields: ").append(toIndentedString(translatedFields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

