/*
 * ZIQNI Admin API
 * Ziqni Application Services are used to manage and configure spaces.
 *
 * The version of the OpenAPI document: 3.0.1
 * Contact: support@ziqni.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ziqni.sdk.admin.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ziqni.sdk.admin.model.Leaderboard;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * LeaderboardResponseByContest
 */
@JsonPropertyOrder({
  LeaderboardResponseByContest.JSON_PROPERTY_CONTEST_ID,
  LeaderboardResponseByContest.JSON_PROPERTY_NAME,
  LeaderboardResponseByContest.JSON_PROPERTY_ROUND,
  LeaderboardResponseByContest.JSON_PROPERTY_LEADERBOARD
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class LeaderboardResponseByContest {
  public static final String JSON_PROPERTY_CONTEST_ID = "contestId";
  private String contestId;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ROUND = "round";
  private Integer round;

  public static final String JSON_PROPERTY_LEADERBOARD = "leaderboard";
  private List<Leaderboard> leaderboard = null;


  public LeaderboardResponseByContest contestId(String contestId) {
    this.contestId = contestId;
    return this;
  }

   /**
   * The id of the contest
   * @return contestId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "NJgUmXABxTLOtwfEDJPR", required = true, value = "The id of the contest")
  @JsonProperty(JSON_PROPERTY_CONTEST_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getContestId() {
    return contestId;
  }


  @JsonProperty(JSON_PROPERTY_CONTEST_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setContestId(String contestId) {
    this.contestId = contestId;
  }


  public LeaderboardResponseByContest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * A name for the Contest. Can be translated
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Fish and Chips", required = true, value = "A name for the Contest. Can be translated")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public LeaderboardResponseByContest round(Integer round) {
    this.round = round;
    return this;
  }

   /**
   * To what round does the contest belong
   * @return round
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "2", required = true, value = "To what round does the contest belong")
  @JsonProperty(JSON_PROPERTY_ROUND)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getRound() {
    return round;
  }


  @JsonProperty(JSON_PROPERTY_ROUND)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRound(Integer round) {
    this.round = round;
  }


  public LeaderboardResponseByContest leaderboard(List<Leaderboard> leaderboard) {
    this.leaderboard = leaderboard;
    return this;
  }

  public LeaderboardResponseByContest addLeaderboardItem(Leaderboard leaderboardItem) {
    if (this.leaderboard == null) {
      this.leaderboard = new ArrayList<>();
    }
    this.leaderboard.add(leaderboardItem);
    return this;
  }

   /**
   * Get leaderboard
   * @return leaderboard
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LEADERBOARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Leaderboard> getLeaderboard() {
    return leaderboard;
  }


  @JsonProperty(JSON_PROPERTY_LEADERBOARD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLeaderboard(List<Leaderboard> leaderboard) {
    this.leaderboard = leaderboard;
  }


  /**
   * Return true if this LeaderboardResponseByContest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LeaderboardResponseByContest leaderboardResponseByContest = (LeaderboardResponseByContest) o;
    return Objects.equals(this.contestId, leaderboardResponseByContest.contestId) &&
        Objects.equals(this.name, leaderboardResponseByContest.name) &&
        Objects.equals(this.round, leaderboardResponseByContest.round) &&
        Objects.equals(this.leaderboard, leaderboardResponseByContest.leaderboard);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contestId, name, round, leaderboard);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LeaderboardResponseByContest {\n");
    sb.append("    contestId: ").append(toIndentedString(contestId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    round: ").append(toIndentedString(round)).append("\n");
    sb.append("    leaderboard: ").append(toIndentedString(leaderboard)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

