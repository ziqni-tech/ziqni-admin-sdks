/*
 * ZIQNI Admin API
 * Ziqni Application Services are used to manage and configure spaces.
 *
 * The version of the OpenAPI document: 3.0.1
 * Contact: support@ziqni.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ziqni.sdk.admin.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ziqni.sdk.admin.model.Macro;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * FactDefault
 */
@JsonPropertyOrder({
  FactDefault.JSON_PROPERTY_OPERATORS,
  FactDefault.JSON_PROPERTY_CONSTANT_TYPE,
  FactDefault.JSON_PROPERTY_CONSTANT_EXAMPLE,
  FactDefault.JSON_PROPERTY_DEFAULT_VALE,
  FactDefault.JSON_PROPERTY_MACROS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FactDefault {
  public static final String JSON_PROPERTY_OPERATORS = "operators";
  private List<String> operators = new ArrayList<>();

  public static final String JSON_PROPERTY_CONSTANT_TYPE = "constantType";
  private String constantType;

  public static final String JSON_PROPERTY_CONSTANT_EXAMPLE = "constantExample";
  private String constantExample;

  public static final String JSON_PROPERTY_DEFAULT_VALE = "defaultVale";
  private String defaultVale;

  public static final String JSON_PROPERTY_MACROS = "macros";
  private List<Macro> macros = null;


  public FactDefault operators(List<String> operators) {
    this.operators = operators;
    return this;
  }

  public FactDefault addOperatorsItem(String operatorsItem) {
    this.operators.add(operatorsItem);
    return this;
  }

   /**
   * The operators supported by the fact
   * @return operators
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "[\"<=\",\"==\",\">=\"]", required = true, value = "The operators supported by the fact")
  @JsonProperty(JSON_PROPERTY_OPERATORS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getOperators() {
    return operators;
  }


  @JsonProperty(JSON_PROPERTY_OPERATORS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOperators(List<String> operators) {
    this.operators = operators;
  }


  public FactDefault constantType(String constantType) {
    this.constantType = constantType;
    return this;
  }

   /**
   * The data type of the constant
   * @return constantType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "date-time", required = true, value = "The data type of the constant")
  @JsonProperty(JSON_PROPERTY_CONSTANT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getConstantType() {
    return constantType;
  }


  @JsonProperty(JSON_PROPERTY_CONSTANT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConstantType(String constantType) {
    this.constantType = constantType;
  }


  public FactDefault constantExample(String constantExample) {
    this.constantExample = constantExample;
    return this;
  }

   /**
   * Example of the constant
   * @return constantExample
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "2019-09-25T15:47:00.000+0000", required = true, value = "Example of the constant")
  @JsonProperty(JSON_PROPERTY_CONSTANT_EXAMPLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getConstantExample() {
    return constantExample;
  }


  @JsonProperty(JSON_PROPERTY_CONSTANT_EXAMPLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConstantExample(String constantExample) {
    this.constantExample = constantExample;
  }


  public FactDefault defaultVale(String defaultVale) {
    this.defaultVale = defaultVale;
    return this;
  }

   /**
   * The default value of the constant for the fact
   * @return defaultVale
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "$contest.active.elapse", value = "The default value of the constant for the fact")
  @JsonProperty(JSON_PROPERTY_DEFAULT_VALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDefaultVale() {
    return defaultVale;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_VALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultVale(String defaultVale) {
    this.defaultVale = defaultVale;
  }


  public FactDefault macros(List<Macro> macros) {
    this.macros = macros;
    return this;
  }

  public FactDefault addMacrosItem(Macro macrosItem) {
    if (this.macros == null) {
      this.macros = new ArrayList<>();
    }
    this.macros.add(macrosItem);
    return this;
  }

   /**
   * Get macros
   * @return macros
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MACROS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Macro> getMacros() {
    return macros;
  }


  @JsonProperty(JSON_PROPERTY_MACROS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMacros(List<Macro> macros) {
    this.macros = macros;
  }


  /**
   * Return true if this FactDefault object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FactDefault factDefault = (FactDefault) o;
    return Objects.equals(this.operators, factDefault.operators) &&
        Objects.equals(this.constantType, factDefault.constantType) &&
        Objects.equals(this.constantExample, factDefault.constantExample) &&
        Objects.equals(this.defaultVale, factDefault.defaultVale) &&
        Objects.equals(this.macros, factDefault.macros);
  }

  @Override
  public int hashCode() {
    return Objects.hash(operators, constantType, constantExample, defaultVale, macros);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FactDefault {\n");
    sb.append("    operators: ").append(toIndentedString(operators)).append("\n");
    sb.append("    constantType: ").append(toIndentedString(constantType)).append("\n");
    sb.append("    constantExample: ").append(toIndentedString(constantExample)).append("\n");
    sb.append("    defaultVale: ").append(toIndentedString(defaultVale)).append("\n");
    sb.append("    macros: ").append(toIndentedString(macros)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

