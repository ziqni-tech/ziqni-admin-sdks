/*
 * ZIQNI Admin API
 * Ziqni Application Services are used to manage and configure spaces.
 *
 * The version of the OpenAPI document: 3.0.1
 * Contact: support@ziqni.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ziqni.sdk.admin.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Macro
 */
@JsonPropertyOrder({
  Macro.JSON_PROPERTY_NAME,
  Macro.JSON_PROPERTY_MACRO_VALUE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Macro {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_MACRO_VALUE = "macroValue";
  private String macroValue;


  public Macro name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the macro
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "time elapsed", required = true, value = "The name of the macro")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public Macro macroValue(String macroValue) {
    this.macroValue = macroValue;
    return this;
  }

   /**
   * The macro value to be used
   * @return macroValue
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "$contest.active.elapse", required = true, value = "The macro value to be used")
  @JsonProperty(JSON_PROPERTY_MACRO_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMacroValue() {
    return macroValue;
  }


  @JsonProperty(JSON_PROPERTY_MACRO_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMacroValue(String macroValue) {
    this.macroValue = macroValue;
  }


  /**
   * Return true if this Macro object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Macro macro = (Macro) o;
    return Objects.equals(this.name, macro.name) &&
        Objects.equals(this.macroValue, macro.macroValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, macroValue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Macro {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    macroValue: ").append(toIndentedString(macroValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

