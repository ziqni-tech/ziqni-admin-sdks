/*
 * ZIQNI Admin API
 * Ziqni Application Services are used to manage and configure spaces.
 *
 * The version of the OpenAPI document: 3.0.1
 * Contact: support@ziqni.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ziqni.sdk.admin.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ziqni.sdk.admin.model.AchievementStatus;
import com.ziqni.sdk.admin.model.DependantOn;
import com.ziqni.sdk.admin.model.Scheduling;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * AchievementAllOf
 */
@JsonPropertyOrder({
  AchievementAllOf.JSON_PROPERTY_NAME,
  AchievementAllOf.JSON_PROPERTY_DESCRIPTION,
  AchievementAllOf.JSON_PROPERTY_TERMS_AND_CONDITIONS,
  AchievementAllOf.JSON_PROPERTY_ICON,
  AchievementAllOf.JSON_PROPERTY_SCHEDULING,
  AchievementAllOf.JSON_PROPERTY_MAX_NUMBER_OF_ISSUES,
  AchievementAllOf.JSON_PROPERTY_STATUS,
  AchievementAllOf.JSON_PROPERTY_STATUS_CODE,
  AchievementAllOf.JSON_PROPERTY_CONSTRAINTS,
  AchievementAllOf.JSON_PROPERTY_ACHIEVEMENT_DEPENDENCIES,
  AchievementAllOf.JSON_PROPERTY_MEMBER_TAGS_FILTER,
  AchievementAllOf.JSON_PROPERTY_PRODUCT_TAGS_FILTER
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AchievementAllOf {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_TERMS_AND_CONDITIONS = "termsAndConditions";
  private String termsAndConditions;

  public static final String JSON_PROPERTY_ICON = "icon";
  private String icon;

  public static final String JSON_PROPERTY_SCHEDULING = "scheduling";
  private Scheduling scheduling;

  public static final String JSON_PROPERTY_MAX_NUMBER_OF_ISSUES = "maxNumberOfIssues";
  private Integer maxNumberOfIssues;

  public static final String JSON_PROPERTY_STATUS = "status";
  private AchievementStatus status;

  public static final String JSON_PROPERTY_STATUS_CODE = "statusCode";
  private Integer statusCode;

  public static final String JSON_PROPERTY_CONSTRAINTS = "constraints";
  private List<String> constraints = new ArrayList<>();

  public static final String JSON_PROPERTY_ACHIEVEMENT_DEPENDENCIES = "achievementDependencies";
  private DependantOn achievementDependencies;

  public static final String JSON_PROPERTY_MEMBER_TAGS_FILTER = "memberTagsFilter";
  private DependantOn memberTagsFilter;

  public static final String JSON_PROPERTY_PRODUCT_TAGS_FILTER = "productTagsFilter";
  private DependantOn productTagsFilter;


  public AchievementAllOf name(String name) {
    this.name = name;
    return this;
  }

   /**
   * A name for the Achievement. Can be translated
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A name for the Achievement. Can be translated")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public AchievementAllOf description(String description) {
    this.description = description;
    return this;
  }

   /**
   * A name for the Achievement. Can be translated
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A name for the Achievement. Can be translated")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public AchievementAllOf termsAndConditions(String termsAndConditions) {
    this.termsAndConditions = termsAndConditions;
    return this;
  }

   /**
   * Terms and conditions of an achievement. Can be translated
   * @return termsAndConditions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Terms and conditions of an achievement. Can be translated")
  @JsonProperty(JSON_PROPERTY_TERMS_AND_CONDITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTermsAndConditions() {
    return termsAndConditions;
  }


  @JsonProperty(JSON_PROPERTY_TERMS_AND_CONDITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTermsAndConditions(String termsAndConditions) {
    this.termsAndConditions = termsAndConditions;
  }


  public AchievementAllOf icon(String icon) {
    this.icon = icon;
    return this;
  }

   /**
   * An Icon id that has been pre uploaded to the system to display for Achievement
   * @return icon
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "An Icon id that has been pre uploaded to the system to display for Achievement")
  @JsonProperty(JSON_PROPERTY_ICON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getIcon() {
    return icon;
  }


  @JsonProperty(JSON_PROPERTY_ICON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIcon(String icon) {
    this.icon = icon;
  }


  public AchievementAllOf scheduling(Scheduling scheduling) {
    this.scheduling = scheduling;
    return this;
  }

   /**
   * Get scheduling
   * @return scheduling
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SCHEDULING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Scheduling getScheduling() {
    return scheduling;
  }


  @JsonProperty(JSON_PROPERTY_SCHEDULING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScheduling(Scheduling scheduling) {
    this.scheduling = scheduling;
  }


  public AchievementAllOf maxNumberOfIssues(Integer maxNumberOfIssues) {
    this.maxNumberOfIssues = maxNumberOfIssues;
    return this;
  }

   /**
   * Maximum number of issued achievements
   * @return maxNumberOfIssues
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum number of issued achievements")
  @JsonProperty(JSON_PROPERTY_MAX_NUMBER_OF_ISSUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMaxNumberOfIssues() {
    return maxNumberOfIssues;
  }


  @JsonProperty(JSON_PROPERTY_MAX_NUMBER_OF_ISSUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxNumberOfIssues(Integer maxNumberOfIssues) {
    this.maxNumberOfIssues = maxNumberOfIssues;
  }


  public AchievementAllOf status(AchievementStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AchievementStatus getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(AchievementStatus status) {
    this.status = status;
  }


   /**
   * The code of the contest
   * @return statusCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3", value = "The code of the contest")
  @JsonProperty(JSON_PROPERTY_STATUS_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getStatusCode() {
    return statusCode;
  }




  public AchievementAllOf constraints(List<String> constraints) {
    this.constraints = constraints;
    return this;
  }

  public AchievementAllOf addConstraintsItem(String constraintsItem) {
    this.constraints.add(constraintsItem);
    return this;
  }

   /**
   * Additional constraints, if set means true
   * @return constraints
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "- deprecated - notifyMember - isHidden - optinRequiredForEntrants - expired", required = true, value = "Additional constraints, if set means true")
  @JsonProperty(JSON_PROPERTY_CONSTRAINTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getConstraints() {
    return constraints;
  }


  @JsonProperty(JSON_PROPERTY_CONSTRAINTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConstraints(List<String> constraints) {
    this.constraints = constraints;
  }


  public AchievementAllOf achievementDependencies(DependantOn achievementDependencies) {
    this.achievementDependencies = achievementDependencies;
    return this;
  }

   /**
   * Get achievementDependencies
   * @return achievementDependencies
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ACHIEVEMENT_DEPENDENCIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DependantOn getAchievementDependencies() {
    return achievementDependencies;
  }


  @JsonProperty(JSON_PROPERTY_ACHIEVEMENT_DEPENDENCIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAchievementDependencies(DependantOn achievementDependencies) {
    this.achievementDependencies = achievementDependencies;
  }


  public AchievementAllOf memberTagsFilter(DependantOn memberTagsFilter) {
    this.memberTagsFilter = memberTagsFilter;
    return this;
  }

   /**
   * Get memberTagsFilter
   * @return memberTagsFilter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MEMBER_TAGS_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DependantOn getMemberTagsFilter() {
    return memberTagsFilter;
  }


  @JsonProperty(JSON_PROPERTY_MEMBER_TAGS_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMemberTagsFilter(DependantOn memberTagsFilter) {
    this.memberTagsFilter = memberTagsFilter;
  }


  public AchievementAllOf productTagsFilter(DependantOn productTagsFilter) {
    this.productTagsFilter = productTagsFilter;
    return this;
  }

   /**
   * Get productTagsFilter
   * @return productTagsFilter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PRODUCT_TAGS_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DependantOn getProductTagsFilter() {
    return productTagsFilter;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_TAGS_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProductTagsFilter(DependantOn productTagsFilter) {
    this.productTagsFilter = productTagsFilter;
  }


  /**
   * Return true if this Achievement_allOf object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AchievementAllOf achievementAllOf = (AchievementAllOf) o;
    return Objects.equals(this.name, achievementAllOf.name) &&
        Objects.equals(this.description, achievementAllOf.description) &&
        Objects.equals(this.termsAndConditions, achievementAllOf.termsAndConditions) &&
        Objects.equals(this.icon, achievementAllOf.icon) &&
        Objects.equals(this.scheduling, achievementAllOf.scheduling) &&
        Objects.equals(this.maxNumberOfIssues, achievementAllOf.maxNumberOfIssues) &&
        Objects.equals(this.status, achievementAllOf.status) &&
        Objects.equals(this.statusCode, achievementAllOf.statusCode) &&
        Objects.equals(this.constraints, achievementAllOf.constraints) &&
        Objects.equals(this.achievementDependencies, achievementAllOf.achievementDependencies) &&
        Objects.equals(this.memberTagsFilter, achievementAllOf.memberTagsFilter) &&
        Objects.equals(this.productTagsFilter, achievementAllOf.productTagsFilter);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, termsAndConditions, icon, scheduling, maxNumberOfIssues, status, statusCode, constraints, achievementDependencies, memberTagsFilter, productTagsFilter);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AchievementAllOf {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    termsAndConditions: ").append(toIndentedString(termsAndConditions)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    scheduling: ").append(toIndentedString(scheduling)).append("\n");
    sb.append("    maxNumberOfIssues: ").append(toIndentedString(maxNumberOfIssues)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusCode: ").append(toIndentedString(statusCode)).append("\n");
    sb.append("    constraints: ").append(toIndentedString(constraints)).append("\n");
    sb.append("    achievementDependencies: ").append(toIndentedString(achievementDependencies)).append("\n");
    sb.append("    memberTagsFilter: ").append(toIndentedString(memberTagsFilter)).append("\n");
    sb.append("    productTagsFilter: ").append(toIndentedString(productTagsFilter)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

