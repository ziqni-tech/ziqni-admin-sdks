package {{invokerPackage}};

import {{invokerPackage}}.api.*;
import {{invokerPackage}}.streaming.WsAddress;
import {{invokerPackage}}.streaming.StreamingClient;
import {{invokerPackage}}.eventbus.ZiqniSimpleEventBus;
import {{invokerPackage}}.configuration.AdminApiClientConfiguration;

import java.time.Duration;
import java.util.function.Supplier;

public class ZiqniAdminApiFactory {

    private StreamingClient streamingClient;
    private ZiqniSimpleEventBus ziqniAdminEventBus;
    private Boolean initialised = false;
    {{#apiInfo}}{{#apis}}private {{classname}}Ws {{#lambda.camelcase}}{{classname}}{{/lambda.camelcase}}Ws;
    {{/apis}}{{/apiInfo}}

    private final AdminApiClientConfiguration configuration;

    public ZiqniAdminApiFactory(AdminApiClientConfiguration configuration) {
        this.configuration = configuration;
    }

    public <T> T initialise(Supplier<T> then) throws Exception {
        initialise();
        return then.get();
    }

    public void initialise() throws Exception {
        if(initialised) return;
        this.initialised = true;
        this.ziqniAdminEventBus = new ZiqniSimpleEventBus();
        this.streamingClient = new StreamingClient(this.configuration, new WsAddress(this.configuration).getAddress(), getZiqniAdminEventBus());
    }

    private void init() {
        try {
            initialise();
        } catch (Exception e) {
            throw new RuntimeException(e);
        }
    }

    public Boolean getInitialised() {
        return initialised;
    }

    public StreamingClient getStreamingClient() {
        assert getInitialised();
        return streamingClient;
    }

    public ZiqniSimpleEventBus getZiqniAdminEventBus() {
        return ziqniAdminEventBus;
    }

    {{#apiInfo}}{{#apis}} public {{classname}}Ws get{{classname}}() {
        /**
        ------{{#operations}}{{#operation}}{{#callbacks.0}},{{/callbacks.0}}{{/operation}}{{/operations}}
        {{#operations}}{{#operation}}{{#callbacks}}{{#urls}}{{#requests}}{{#allParams}}{{{paramName}}}: {{^required}}Option<{{/required}}{{#isArray}}&{{/isArray}}{{{dataType}}}{{^required}}>{{/required}},
        {{/allParams}}{{{name}}}{{{operationId}}}{{/requests}}
        {{/urls}}{{/callbacks}}{{/operation}}{{/operations}}
        */
        if(this.{{#lambda.camelcase}}{{classname}}{{/lambda.camelcase}}Ws == null) {
            init();
            this.{{#lambda.camelcase}}{{classname}}{{/lambda.camelcase}}Ws = new {{classname}}Ws(streamingClient, Duration.ofSeconds(5));
        }

        return this.{{#lambda.camelcase}}{{classname}}{{/lambda.camelcase}}Ws;
    }

    {{/apis}}{{/apiInfo}}
}
